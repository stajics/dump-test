---
swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "1.0"
  title: GreenAuto-Backend
  description: API
# during dev, should point to your local machine
host: "localhost:3000"
# basePath prefixes all resource paths
basePath: /v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

################################################################################
#                                  Security                                    #
################################################################################

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "Users login JWT with Bearer prefix. Example: Bearer <JWT>"

################################################################################
#                                           Paths                              #
################################################################################

paths:
  ##USERS
  /users/signup:
    post:
      security:
        - Bearer: []
      tags:
        - User
      summary: Add new user.
      description: "Requires logged in user to be menadzer or super_user. Menadzer can create korisnik for his poslovnica."
      operationId: signUp
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be added to the users.
          required: true
          schema:
            $ref: "#/definitions/UsersSignUpBody"
      responses:
        "201":
          description: User signed up.
          schema:
            $ref: "#/definitions/UsersSignUpResponse"


  /users/signin:
    post:
      tags:
        - User
      summary: Sign in.
      description: "Sign in."
      operationId: signIn
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User credentials for sign in.
          required: true
          schema:
            $ref: "#/definitions/UsersSignInBody"
      responses:
        "201":
          description: User signed up.
          schema:
            $ref: "#/definitions/UsersSignUpResponse"

  /users/refresh_token:
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: Refresh login token..
      description: "Gets new login token."
      operationId: refreshToken
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: User signed up.
          schema:
            $ref: "#/definitions/UsersSignUpResponse"

  /users:
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: Get all users. Super_user get all users. Others get users from own poslovnica.
      operationId: getUsers
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/UsersResponse"

  /users/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: Get user. Super_user get all users. Others get users from own poslovnica.
      operationId: getUsers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user that needs to be updated
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/DeleteUsersResponse"
    put:
      security:
        - Bearer: []
      tags:
        - User
      summary: Update user.
      description: "Requires logged in user to be super_user or menadzer. Mendazer can edit users from his poslovnica."
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutUsersBody"
      responses:
        "200":
          description: User updated.
          schema:
            $ref: "#/definitions/DeleteUsersResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - User
      summary: Delete user.
      description: "Requires logged in user to be super_user or menadzer. Mendazer can delete users from his poslovnica."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: User deleted.
          schema:
            $ref: "#/definitions/DeleteUsersResponse"
########################################
#######POSLOVNICA
  /poslovnice:
    get:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Get all poslovnice.
      description: "Super_user gets all poslovnice. Others get ther own poslovnica."
      operationId: getPoslovnice
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All poslovnice.
          schema:
            $ref: "#/definitions/PoslovnicaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Add new poslovnica.
      description: "Requires logged in user to be super_user."
      operationId: createPoslovnica
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Poslovnica object that needs to be added to the poslovnice.
          required: true
          schema:
            $ref: "#/definitions/PostPoslovniceBody"
      responses:
        "201":
          description: Poslovnica created.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"
  /poslovnice/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Get all poslovnice.
      description: "Super_user gets all poslovnice. Others get ther own poslovnica."
      operationId: getPoslovnica
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the poslovnica
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Update poslovnica.
      description: "Requires logged in user to be super_user."
      operationId: updatePoslovnica
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the poslovnica that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutPoslovniceBody"
      responses:
        "200":
          description: Poslovnica updated.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Delete poslovnica.
      description: "Requires logged in user to be super_user or menadzer. Mendazer can delete users from his poslovnica."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the poslovnica that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Poslovnica deleted.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"
########################################
#######OPSTINA
  /opstine:
    get:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Get all opstine.
      description: "Requires logged in user to be super_user."
      operationId: getOpstine
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All opstine.
          schema:
            $ref: "#/definitions/OpstinaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Add new opstina.
      description: "Requires logged in user to be super_user."
      operationId: createOpstina
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Opstina object that needs to be added to the opstine.
          required: true
          schema:
            $ref: "#/definitions/PostOpstineBody"
      responses:
        "201":
          description: Opstina created.
          schema:
            $ref: "#/definitions/OpstineResponse"
  /opstine/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Get opstina.
      description: "Requires logged in user to be super_user."
      operationId: getOpstina
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the opstina
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/OpstineResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Update opstina.
      description: "Requires logged in user to be super_user."
      operationId: updateOpstina
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the opstina that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutOpstineBody"
      responses:
        "200":
          description: Opstina updated.
          schema:
            $ref: "#/definitions/OpstineResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Delete opstina.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the opstina that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Opstina deleted.
          schema:
            $ref: "#/definitions/OpstineResponse"

########################################
#######USLUGE
  /usluge:
    get:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Get all usluge.
      description: "Super_user gets all usluge. Others get from ther own poslovnica."
      operationId: getUsluge
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All usluge.
          schema:
            $ref: "#/definitions/UslugaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Add new usluga.
      description: "Requires logged in user to be manager. Create usluga for users poslovnica."
      operationId: createUsluga
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Usluga object that needs to be added to the usluge.
          required: true
          schema:
            $ref: "#/definitions/PostUslugeBody"
      responses:
        "201":
          description: Usluga created.
          schema:
            $ref: "#/definitions/UslugeResponse"
  /usluge/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Get usluga.
      description: "Super_user gets all usluge. Others get from ther own poslovnica."
      operationId: getUsluga
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the usluga
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/UslugeResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Update usluga.
      description: "Requires logged in user to be manager. Update usluga from users poslovnica."
      operationId: updateUsluga
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the usluga that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutUslugeBody"
      responses:
        "200":
          description: Usluga updated.
          schema:
            $ref: "#/definitions/UslugeResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Delete usluga.
      description: "Requires logged in user to be manager. Delete usluga from users poslovnica."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the usluga that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Usluga deleted.
          schema:
            $ref: "#/definitions/UslugeResponse"
########################################
#######OSIGURANJE
  /osiguranja:
    get:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Get all osiguranja.
      description: "Requires logged in user to be manager."
      operationId: getOsiguranjees
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All osiguranja.
          schema:
            $ref: "#/definitions/OsiguranjaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Add new osiguranje.
      description: "Requires logged in user to be super_user."
      operationId: createOsiguranje
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Osiguranje object that needs to be added to the osiguranja.
          required: true
          schema:
            $ref: "#/definitions/PostOsiguranjeBody"
      responses:
        "201":
          description: Osiguranje created.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"
  /osiguranja/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Get osiguranje.
      description: "Requires logged in user to be manager."
      operationId: getOsiguranje
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the osiguranje
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Update osiguranje.
      description: "Requires logged in user to be super_user."
      operationId: updateOsiguranje
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the osiguranje that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutOsiguranjeBody"
      responses:
        "200":
          description: Osiguranje updated.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Delete osiguranje.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the osiguranje that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Osiguranje deleted.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"
########################################
#######TAKSE
  /takse:
    get:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Get all takse.
      description: "Super_user gets all takse. Others get takse for their poslovnica opstina and other takse (with opstina attribute value 0)"
      operationId: getTakse
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All takse.
          schema:
            $ref: "#/definitions/TaksaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Add new taksa.
      description: "Requires logged in user to be super_user."
      operationId: createTaksa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Taksa object that needs to be added to the takse.
          required: true
          schema:
            $ref: "#/definitions/PostTakseBody"
      responses:
        "201":
          description: Taksa created.
          schema:
            $ref: "#/definitions/TakseResponse"
  /takse/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Get taksa.
      description: "Super_user gets all takse. Others get takse for their poslovnica opstina and other takse (with opstina attribute value 0)"
      operationId: getTaksa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the taksa
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/TakseResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Update taksa.
      description: "Requires logged in user to be super_user."
      operationId: updateTaksa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the taksa that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutTakseBody"
      responses:
        "200":
          description: Taksa updated.
          schema:
            $ref: "#/definitions/TakseResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Delete taksa.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the taksa that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Taksa deleted.
          schema:
            $ref: "#/definitions/TakseResponse"
################################################################################
#                                 Definitions                                  #
################################################################################

definitions:
  #################################################
  #models
  User:
    type: object
    required:
      - id
      - username
      - ime
      - poslovnica
      - email
      - rola
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      username:
        type: string
      ime:
        type: string
      poslovnica:
        type: string
      email:
        type: string
      rola:
        type: string
        enum: ['korisnik', 'menadzer', 'super_user']
      createdAt:
        type: string
      updatedAt:
        type: string

  Poslovnica:
    type: object
    required:
      - id
      - naziv
      - opstina
      - adresa
      - pib
      - matBr
      - ziro
      - telefon
      - email
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      opstina:
        type: integer
      adresa:
        type: string
      pib:
        type: string
      matBr:
        type: string
      ziro:
        type: string
      telefon:
        type: string
      email:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Opstina:
    type: object
    required:
      - id
      - naziv
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Usluga:
    type: object
    required:
      - id
      - naziv
      - poslovnica
      - opis
      - cena
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      poslovnica:
        type: string
      opis:
        type: string
      cena:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Osiguranje:
    type: object
    required:
      - id
      - naziv
      - vrstaVozila
      - kwOd
      - kwDo
      - nosivost
      - ccm
      - brMesta
      - cena
      - cena5
      - cena10
      - cena15
      - poslovnice
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      vrstaVozila:
        type: string
      kwOd:
        type: string
      kwDo:
        type: string
      nosivost:
        type: string
      ccm:
        type: string
      brMesta:
        type: string
      cena:
        type: string
      cena5:
        type: string
      cena10:
        type: string
      cena15:
        type: string
      poslovnice:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Taksa:
    type: object
    required:
      - id
      - usluga
      - opstina
      - vrstaVozila
      - godisteOd
      - godisteDo
      - zapreminaOd
      - zapreminaDo
      - snagaOd
      - snagaDo
      - starostOd
      - starostDo
      - brSedistaOd
      - brSedistaDo
      - nosivostOd
      - nosivostDo
      - cena
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      usluga:
        type: string
      opstina:
        type: integer
      vrstaVozila:
        type: string
      godisteOd:
        type: integer
      godisteDo:
        type: integer
      zapreminaOd:
        type: integer
      zapreminaDo:
        type: integer
      snagaOd:
        type: integer
      snagaDo:
        type: integer
      starostOd:
        type: integer
      starostDo:
        type: integer
      brSedistaOd:
        type: integer
      brSedistaDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      cena:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string

  #################################################################
  #################################################################
  #params

  ######################
  #Users
  UsersSignUpBody:
    type: object
    required:
      - username
      - ime
      - poslovnica
      - password
      - email
    properties:
      username:
        type: string
      ime:
        type: string
      poslovnica:
        type: integer
      password:
        type: string
      email:
        type: string

  PutUsersBody:
    type: object
    properties:
      username:
        type: string
      ime:
        type: string
      password:
        type: string
      email:
        type: string

  UsersSignInBody:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string

  ###############
  #Poslovnica
  PutPoslovniceBody:
    type: object
    properties:
      naziv:
        type: string
      adresa:
        type: string
      pib:
        type: string
      matBr:
        type: string
      ziro:
        type: string
      telefon:
        type: string
      email:
        type: string
      osiguranja:
        type: array
        items:
          type: integer

  PostPoslovniceBody:
    type: object
    required:
      - naziv
      - opstina
      - adresa
      - pib
      - matBr
      - ziro
      - telefon
      - email
    properties:
      naziv:
        type: string
      opstina:
        type: integer
      adresa:
        type: string
      pib:
        type: string
      matBr:
        type: string
      ziro:
        type: string
      telefon:
        type: string
      email:
        type: string

  ###############
  #Opstina
  PutOpstineBody:
    type: object
    properties:
      naziv:
        type: string

  PostOpstineBody:
    type: object
    required:
      - naziv
    properties:
      naziv:
        type: string

  ###############
  #Usluga
  PostUslugeBody:
    type: object
    required:
      - naziv
      - opis
      - cena
    properties:
      naziv:
        type: string
      opis:
        type: string
      cena:
        type: string

  PutUslugeBody:
    type: object
    required:
      - naziv
      - opis
      - cena
    properties:
      naziv:
        type: string
      opis:
        type: string
      cena:
        type: string
  ###############
  #Osiguranje
  PostOsiguranjeBody:
    type: object
    required:
      - naziv
      - vrstaVozila
      - kwOd
      - kwDo
      - nosivost
      - ccm
      - brMesta
      - cena
      - cena5
      - cena10
      - cena15
    properties:
      naziv:
        type: string
      vrstaVozila:
        type: string
      kwOd:
        type: string
      kwDo:
        type: string
      nosivost:
        type: string
      ccm:
        type: string
      brMesta:
        type: string
      cena:
        type: string
      cena5:
        type: string
      cena10:
        type: string
      cena15:
        type: string
      poslovnice:
        type: array
        items:
          type: integer

  PutOsiguranjeBody:
    type: object
    properties:
      naziv:
        type: string
      vrstaVozila:
        type: string
      kwOd:
        type: string
      kwDo:
        type: string
      nosivost:
        type: string
      ccm:
        type: string
      brMesta:
        type: string
      cena:
        type: string
      cena5:
        type: string
      poslovnice:
        type: array
        items:
          type: integer

  ###############
  #Taksa
  PostTakseBody:
    type: object
    required:
      - usluga
      - opstina
      - vrstaVozila
      - godisteOd
      - godisteDo
      - zapreminaOd
      - zapreminaDo
      - snagaOd
      - snagaDo
      - starostOd
      - starostDo
      - brSedistaOd
      - brSedistaDo
      - nosivostOd
      - nosivostDo
      - cena
    properties:
      usluga:
        type: string
      opstina:
        type: integer
      vrstaVozila:
        type: string
      godisteOd:
        type: integer
      godisteDo:
        type: integer
      zapreminaOd:
        type: integer
      zapreminaDo:
        type: integer
      snagaOd:
        type: integer
      snagaDo:
        type: integer
      starostOd:
        type: integer
      starostDo:
        type: integer
      brSedistaOd:
        type: integer
      brSedistaDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      cena:
        type: integer

  PutTakseBody:
    type: object
    properties:
      usluga:
        type: string
      opstina:
        type: integer
      vrstaVozila:
        type: string
      godisteOd:
        type: integer
      godisteDo:
        type: integer
      zapreminaOd:
        type: integer
      zapreminaDo:
        type: integer
      snagaOd:
        type: integer
      snagaDo:
        type: integer
      starostOd:
        type: integer
      starostDo:
        type: integer
      brSedistaOd:
        type: integer
      brSedistaDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      cena:
        type: integer

  ###############################################################
  ###############################################################
  #responses

  ######################
  #Users
  UsersSignUpResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        properties:
          token:
            type: string
            description: "JWT"
          user:
            $ref: "#/definitions/User"
  UsersResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - users
        properties:
          users:
            type: 'array'
            items:
              $ref: "#/definitions/User"

  DeleteUsersResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - user
        properties:
          user:
            $ref: "#/definitions/User"

###################
#Poslovnica
  PoslovnicaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - poslovnice
        properties:
          poslovnica:
            type: 'array'
            items:
              $ref: "#/definitions/Poslovnica"

  DeletePoslovniceResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - poslovnica
        properties:
          poslovnica:
            $ref: "#/definitions/Poslovnica"

###################
#Opstina
  OpstinaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - opstine
        properties:
          opstina:
            type: 'array'
            items:
              $ref: "#/definitions/Opstina"

  OpstineResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - opstina
        properties:
          opstina:
            $ref: "#/definitions/Opstina"

###################
#Usluga
  UslugaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - usluge
        properties:
          usluga:
            type: 'array'
            items:
              $ref: "#/definitions/Usluga"

  UslugeResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - usluga
        properties:
          usluga:
            $ref: "#/definitions/Usluga"
###################
#Osiguranje
  OsiguranjaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - osiguranje
        properties:
          osiguranje:
            type: 'array'
            items:
              $ref: "#/definitions/Osiguranje"

  OsiguranjeResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - osiguranje
        properties:
          osiguranje:
            $ref: "#/definitions/Osiguranje"

  ###################
  #Taksa
  TaksaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - takse
        properties:
          taksa:
            type: 'array'
            items:
              $ref: "#/definitions/Taksa"

  TakseResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - taksa
        properties:
          taksa:
            $ref: "#/definitions/Taksa"
