---
swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "1.0"
  title: GreenAuto-Backend
  description: API
# during dev, should point to your local machine
host: "localhost:3000"
# basePath prefixes all resource paths
basePath: /v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

################################################################################
#                                  Security                                    #
################################################################################

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "Users login JWT with Bearer prefix. Example: Bearer <JWT>"

################################################################################
#                                           Paths                              #
################################################################################

paths:
  ##USERS
  /users/signup:
    post:
      security:
        - Bearer: []
      tags:
        - User
      summary: Add new user.
      description: "Requires logged in user to be menadzer or super_user. Menadzer can create korisnik for his poslovnica."
      operationId: signUp
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object that needs to be added to the users.
          required: true
          schema:
            $ref: "#/definitions/UsersSignUpBody"
      responses:
        "201":
          description: User signed up.
          schema:
            $ref: "#/definitions/UsersSignUpResponse"


  /users/signin:
    post:
      tags:
        - User
      summary: Sign in.
      description: "Sign in."
      operationId: signIn
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User credentials for sign in.
          required: true
          schema:
            $ref: "#/definitions/UsersSignInBody"
      responses:
        "201":
          description: User signed up.
          schema:
            $ref: "#/definitions/UsersSignUpResponse"

  /users/refresh_token:
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: Refresh login token.
      description: "Gets new login token."
      operationId: refreshToken
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: User signed up.
          schema:
            $ref: "#/definitions/UsersSignUpResponse"

  /users:
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: Get users.
      desciption: Get all users. Super_user get all users. Others get users from own poslovnica.
      operationId: getUsers
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/UsersResponse"

  /users/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: Get user.
      description: Get user. Super_user get all users. Others get users from own poslovnica.
      operationId: getUsers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user that needs to be updated
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/DeleteUsersResponse"
    put:
      security:
        - Bearer: []
      tags:
        - User
      summary: Update user.
      description: "Requires logged in user to be super_user or menadzer. Mendazer can edit users from his poslovnica."
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutUsersBody"
      responses:
        "200":
          description: User updated.
          schema:
            $ref: "#/definitions/DeleteUsersResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - User
      summary: Delete user.
      description: "Requires logged in user to be super_user or menadzer. Mendazer can delete users from his poslovnica."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: User deleted.
          schema:
            $ref: "#/definitions/DeleteUsersResponse"
########################################
#######POSLOVNICA
  /poslovnice:
    get:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Get all poslovnice.
      description: "Super_user gets all poslovnice. Others get ther own poslovnica."
      operationId: getPoslovnice
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All poslovnice.
          schema:
            $ref: "#/definitions/PoslovnicaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Add new poslovnica.
      description: "Requires logged in user to be super_user."
      operationId: createPoslovnica
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Poslovnica object that needs to be added to the poslovnice.
          required: true
          schema:
            $ref: "#/definitions/PostPoslovniceBody"
      responses:
        "201":
          description: Poslovnica created.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"
  /poslovnice/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Get all poslovnice.
      description: "Super_user gets all poslovnice. Others get ther own poslovnica."
      operationId: getPoslovnica
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the poslovnica
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Update poslovnica.
      description: "Requires logged in user to be super_user."
      operationId: updatePoslovnica
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the poslovnica that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutPoslovniceBody"
      responses:
        "200":
          description: Poslovnica updated.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Poslovnica
      summary: Delete poslovnica.
      description: "Requires logged in user to be super_user or menadzer. Mendazer can delete users from his poslovnica."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the poslovnica that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Poslovnica deleted.
          schema:
            $ref: "#/definitions/DeletePoslovniceResponse"
########################################
#######OPSTINA
  /opstine:
    get:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Get all opstine.
      description: "Requires logged in user to be super_user."
      operationId: getOpstine
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All opstine.
          schema:
            $ref: "#/definitions/OpstinaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Add new opstina.
      description: "Requires logged in user to be super_user."
      operationId: createOpstina
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Opstina object that needs to be added to the opstine.
          required: true
          schema:
            $ref: "#/definitions/PostOpstineBody"
      responses:
        "201":
          description: Opstina created.
          schema:
            $ref: "#/definitions/OpstineResponse"
  /opstine/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Get opstina.
      description: "Requires logged in user to be super_user."
      operationId: getOpstina
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the opstina
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/OpstineResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Update opstina.
      description: "Requires logged in user to be super_user."
      operationId: updateOpstina
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the opstina that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutOpstineBody"
      responses:
        "200":
          description: Opstina updated.
          schema:
            $ref: "#/definitions/OpstineResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Opstina
      summary: Delete opstina.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the opstina that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Opstina deleted.
          schema:
            $ref: "#/definitions/OpstineResponse"

########################################
#######USLUGE
  /usluge:
    get:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Get all usluge.
      description: "Super_user gets all usluge. Others get from ther own poslovnica."
      operationId: getUsluge
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All usluge.
          schema:
            $ref: "#/definitions/UslugaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Add new usluga.
      description: "Requires logged in user to be manager. Create usluga for users poslovnica."
      operationId: createUsluga
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Usluga object that needs to be added to the usluge.
          required: true
          schema:
            $ref: "#/definitions/PostUslugeBody"
      responses:
        "201":
          description: Usluga created.
          schema:
            $ref: "#/definitions/UslugeResponse"
  /usluge/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Get usluga.
      description: "Super_user gets all usluge. Others get from ther own poslovnica."
      operationId: getUsluga
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the usluga
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/UslugeResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Update usluga.
      description: "Requires logged in user to be manager. Update usluga from users poslovnica."
      operationId: updateUsluga
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the usluga that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutUslugeBody"
      responses:
        "200":
          description: Usluga updated.
          schema:
            $ref: "#/definitions/UslugeResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Usluga
      summary: Delete usluga.
      description: "Requires logged in user to be manager. Delete usluga from users poslovnica."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the usluga that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Usluga deleted.
          schema:
            $ref: "#/definitions/UslugeResponse"
########################################
#######OSIGURANJE
  /osiguranja:
    get:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Get all osiguranja.
      description: "Requires logged in user to be manager."
      operationId: getOsiguranjees
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All osiguranja.
          schema:
            $ref: "#/definitions/OsiguranjaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Add new osiguranje.
      description: "Requires logged in user to be super_user."
      operationId: createOsiguranje
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Osiguranje object that needs to be added to the osiguranja.
          required: true
          schema:
            $ref: "#/definitions/PostOsiguranjeBody"
      responses:
        "201":
          description: Osiguranje created.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"
  /osiguranja/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Get osiguranje.
      description: "Requires logged in user to be manager."
      operationId: getOsiguranje
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the osiguranje
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Update osiguranje.
      description: "Requires logged in user to be super_user."
      operationId: updateOsiguranje
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the osiguranje that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutOsiguranjeBody"
      responses:
        "200":
          description: Osiguranje updated.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Osiguranje
      summary: Delete osiguranje.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the osiguranje that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Osiguranje deleted.
          schema:
            $ref: "#/definitions/OsiguranjeResponse"
########################################
#######TAKSE
  /takse:
    get:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Get all takse.
      description: "Super_user gets all takse. Others get takse for their poslovnica opstina and other takse (with opstina attribute value 0)"
      operationId: getTakse
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All takse.
          schema:
            $ref: "#/definitions/TaksaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Add new taksa.
      description: "Requires logged in user to be super_user."
      operationId: createTaksa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Taksa object that needs to be added to the takse.
          required: true
          schema:
            $ref: "#/definitions/PostTakseBody"
      responses:
        "201":
          description: Taksa created.
          schema:
            $ref: "#/definitions/TakseResponse"
  /takse/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Get taksa.
      description: "Super_user gets all takse. Others get takse for their poslovnica opstina and other takse (with opstina attribute value 0)"
      operationId: getTaksa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the taksa
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/TakseResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Update taksa.
      description: "Requires logged in user to be super_user."
      operationId: updateTaksa
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the taksa that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutTakseBody"
      responses:
        "200":
          description: Taksa updated.
          schema:
            $ref: "#/definitions/TakseResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Taksa
      summary: Delete taksa.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the taksa that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Taksa deleted.
          schema:
            $ref: "#/definitions/TakseResponse"
########################################
#######CALCULATOR
  /calculator/takse:
    get:
      security:
        - Bearer: []
      tags:
        - Calculator
      summary: Get filtered takse.
      description: "Get filtered takse for users poslovnica for query."
      operationId: filterTakse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: vrstaVozila
          description: Vrsta vozila.
          required: true
          type: string
        - in: query
          name: godiste
          description: Godiste vozila.
          type: integer
        - in: query
          name: zapremina
          description: Zapremina motora.
          type: integer
        - in: query
          name: snaga
          description: Snaga motora.
          type: integer
        - in: query
          name: brSedista
          description: Broj sedista.
          type: integer
        - in: query
          name: nosivost
          description: Nosivost vozila.
          type: integer
        - in: query
          name: izuzetak
          description: Nosivost vozila.
          type: string
      responses:
        "200":
          description: Takse.
          schema:
            $ref: "#/definitions/TakseResponse"
  /calculator/stavkeOsiguranja:
    get:
      security:
        - Bearer: []
      tags:
        - Calculator
      summary: Get filtered stavkeOsiguranja.
      description: "Get filtered stavke osiguranja for osiguranje for query."
      operationId: filterStavkeOsiguranja
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: osiguranje
          description: Id osiguranja.
          required: true
          type: integer
        - in: query
          name: vrstaVozila
          description: Vrsta vozila.
          required: true
          type: string
        - in: query
          name: kw
          description: Kw vozila.
          type: integer
        - in: query
          name: ccm
          description: Ccm.
          type: integer
        - in: query
          name: brMesta
          description: Broj mesta.
          type: integer
        - in: query
          name: nosivost
          description: Nosivost vozila.
          type: integer
        - in: query
          name: izuzetak
          description: Nosivost vozila.
          type: string
      responses:
        "200":
          description: Takse.
          schema:
            $ref: "#/definitions/StavkeOsiguranjaResponse"
########################################
#######STAVKE OSIGURANJA
  /stavkeOsiguranja:
    get:
      security:
        - Bearer: []
      tags:
        - StavkaOsiguranja
      summary: Get all stavkeOsiguranja.
      description: "Requires logged in user to be super_user."
      operationId: getStavkeOsiguranja
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All stavkeOsiguranja.
          schema:
            $ref: "#/definitions/StavkaOsiguranjaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - StavkaOsiguranja
      summary: Add new stavkaOsiguranja.
      description: "Requires logged in user to be super_user."
      operationId: createStavkaOsiguranja
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: StavkaOsiguranja object that needs to be added to the stavkeOsiguranja.
          required: true
          schema:
            $ref: "#/definitions/PostStavkeOsiguranjaBody"
      responses:
        "201":
          description: StavkaOsiguranja created.
          schema:
            $ref: "#/definitions/StavkeOsiguranjaResponse"
  /stavkeOsiguranja/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - StavkaOsiguranja
      summary: Get stavkaOsiguranja.
      description: "Requires logged in user to be super_user."
      operationId: getStavkaOsiguranja
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the stavkaOsiguranja
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/StavkeOsiguranjaResponse"
    put:
      security:
        - Bearer: []
      tags:
        - StavkaOsiguranja
      summary: Update stavkaOsiguranja.
      description: "Requires logged in user to be super_user."
      operationId: updateStavkaOsiguranja
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the stavkaOsiguranja that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutStavkeOsiguranjaBody"
      responses:
        "200":
          description: StavkaOsiguranja updated.
          schema:
            $ref: "#/definitions/StavkeOsiguranjaResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - StavkaOsiguranja
      summary: Delete stavkaOsiguranja.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the stavkaOsiguranja that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: StavkaOsiguranja deleted.
          schema:
            $ref: "#/definitions/StavkeOsiguranjaResponse"

########################################
#######NAZIV TAKSE
  /naziviTaksa:
    get:
      security:
        - Bearer: []
      tags:
        - NazivTakse
      summary: Get all naziviTaksa.
      description: "Requires logged in user to be super_user."
      operationId: getNaziviTaksa
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All naziviTaksa.
          schema:
            $ref: "#/definitions/NazivTakseResponse"
    post:
      security:
        - Bearer: []
      tags:
        - NazivTakse
      summary: Add new nazivTakse.
      description: "Requires logged in user to be super_user."
      operationId: createNazivTakse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: NazivTakse object that needs to be added to the naziviTaksa.
          required: true
          schema:
            $ref: "#/definitions/PostNaziviTaksaBody"
      responses:
        "201":
          description: NazivTakse created.
          schema:
            $ref: "#/definitions/NaziviTaksaResponse"
  /naziviTaksa/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - NazivTakse
      summary: Get nazivTakse.
      description: "Requires logged in user to be super_user."
      operationId: getNazivTakse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the nazivTakse
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/NaziviTaksaResponse"
    put:
      security:
        - Bearer: []
      tags:
        - NazivTakse
      summary: Update nazivTakse.
      description: "Requires logged in user to be super_user."
      operationId: updateNazivTakse
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the nazivTakse that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutNaziviTaksaBody"
      responses:
        "200":
          description: NazivTakse updated.
          schema:
            $ref: "#/definitions/NaziviTaksaResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - NazivTakse
      summary: Delete nazivTakse.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the nazivTakse that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: NazivTakse deleted.
          schema:
            $ref: "#/definitions/NaziviTaksaResponse"
  /banke:
    get:
      security:
        - Bearer: []
      tags:
        - Banka
      summary: Get all banke.
      description: "Requires logged in user to be super_user."
      operationId: getBanke
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All banke.
          schema:
            $ref: "#/definitions/BankaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Banka
      summary: Add new banka.
      description: "Requires logged in user to be super_user."
      operationId: createBanka
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Banka object that needs to be added to the banke.
          required: true
          schema:
            $ref: "#/definitions/PostBankeBody"
      responses:
        "201":
          description: Banka created.
          schema:
            $ref: "#/definitions/BankeResponse"
  /banke/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Banka
      summary: Get banka.
      description: "Requires logged in user to be super_user."
      operationId: getBanka
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the banka
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/BankeResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Banka
      summary: Update banka.
      description: "Requires logged in user to be super_user."
      operationId: updateBanka
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the banka that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutBankeBody"
      responses:
        "200":
          description: Banka updated.
          schema:
            $ref: "#/definitions/BankeResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Banka
      summary: Delete banka.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the banka that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Banka deleted.
          schema:
            $ref: "#/definitions/BankeResponse"
########################################
#######LICE
  /lica:
    get:
      security:
        - Bearer: []
      tags:
        - Lice
      summary: Get all lica.
      description: "Requires logged in user to be super_user."
      operationId: getLica
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All lica.
          schema:
            $ref: "#/definitions/LiceResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Lice
      summary: Add new lice.
      description: "Requires logged in user to be super_user."
      operationId: createLice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Lice object that needs to be added to the lica.
          required: true
          schema:
            $ref: "#/definitions/PostLicaBody"
      responses:
        "201":
          description: Lice created.
          schema:
            $ref: "#/definitions/LicaResponse"
  /lica/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Lice
      summary: Get lice.
      description: "Requires logged in user to be super_user."
      operationId: getLice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the lice
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/LicaResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Lice
      summary: Update lice.
      description: "Requires logged in user to be super_user."
      operationId: updateLice
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the lice that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutLicaBody"
      responses:
        "200":
          description: Lice updated.
          schema:
            $ref: "#/definitions/LicaResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Lice
      summary: Delete lice.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the lice that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Lice deleted.
          schema:
            $ref: "#/definitions/LicaResponse"

########################################
#######VOZILO
  /vozila:
    get:
      security:
        - Bearer: []
      tags:
        - Vozilo
      summary: Get all vozila.
      description: "Requires logged in user to be super_user."
      operationId: getVozila
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All vozila.
          schema:
            $ref: "#/definitions/VoziloResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Vozilo
      summary: Add new vozilo.
      description: "Requires logged in user to be super_user."
      operationId: createVozilo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Vozilo object that needs to be added to the vozila.
          required: true
          schema:
            $ref: "#/definitions/PostVozilaBody"
      responses:
        "201":
          description: Vozilo created.
          schema:
            $ref: "#/definitions/VozilaResponse"
  /vozila/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Vozilo
      summary: Get vozilo.
      description: "Requires logged in user to be super_user."
      operationId: getVozilo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the vozilo
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/VozilaResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Vozilo
      summary: Update vozilo.
      description: "Requires logged in user to be super_user."
      operationId: updateVozilo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the vozilo that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutVozilaBody"
      responses:
        "200":
          description: Vozilo updated.
          schema:
            $ref: "#/definitions/VozilaResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Vozilo
      summary: Delete vozilo.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the vozilo that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Vozilo deleted.
          schema:
            $ref: "#/definitions/VozilaResponse"
########################################
#######TIP PREDMETA
  /tipoviPredmeta:
    get:
      security:
        - Bearer: []
      tags:
        - TipPredmeta
      summary: Get all tipoviPredmeta.
      description: "Requires logged in user to be super_user."
      operationId: getTipoviPredmeta
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All tipoviPredmeta.
          schema:
            $ref: "#/definitions/TipPredmetaResponse"
    post:
      security:
        - Bearer: []
      tags:
        - TipPredmeta
      summary: Add new tipPredmeta.
      description: "Requires logged in user to be super_user."
      operationId: createTipPredmeta
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: TipPredmeta object that needs to be added to the tipoviPredmeta.
          required: true
          schema:
            $ref: "#/definitions/PostTipoviPredmetaBody"
      responses:
        "201":
          description: TipPredmeta created.
          schema:
            $ref: "#/definitions/TipoviPredmetaResponse"
  /tipoviPredmeta/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - TipPredmeta
      summary: Get tipPredmeta.
      description: "Requires logged in user to be super_user."
      operationId: getTipPredmeta
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the tipPredmeta
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/TipoviPredmetaResponse"
    put:
      security:
        - Bearer: []
      tags:
        - TipPredmeta
      summary: Update tipPredmeta.
      description: "Requires logged in user to be super_user."
      operationId: updateTipPredmeta
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the tipPredmeta that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutTipoviPredmetaBody"
      responses:
        "200":
          description: TipPredmeta updated.
          schema:
            $ref: "#/definitions/TipoviPredmetaResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - TipPredmeta
      summary: Delete tipPredmeta.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the tipPredmeta that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: TipPredmeta deleted.
          schema:
            $ref: "#/definitions/TipoviPredmetaResponse"
########################################
#######PREDMET
  /predmeti:
    get:
      security:
        - Bearer: []
      tags:
        - Predmet
      summary: Get all predmeti.
      description: "Requires logged in user to be super_user."
      operationId: getPredmeti
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: All predmeti.
          schema:
            $ref: "#/definitions/PredmetResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Predmet
      summary: Add new predmet.
      description: "Requires logged in user to be super_user."
      operationId: createPredmet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Predmet object that needs to be added to the predmeti.
          required: true
          schema:
            $ref: "#/definitions/PostPredmetiBody"
      responses:
        "201":
          description: Predmet created.
          schema:
            $ref: "#/definitions/PredmetiResponse"
  /predmeti/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Predmet
      summary: Get predmet.
      description: "Requires logged in user to be super_user."
      operationId: getPredmet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the predmet
          required: true
          type: string
      responses:
        "200":
          description: All users.
          schema:
            $ref: "#/definitions/PredmetiResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Predmet
      summary: Update predmet.
      description: "Requires logged in user to be super_user."
      operationId: updatePredmet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the predmet that needs to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Attributes and values that will be updated.
          required: true
          schema:
            $ref: "#/definitions/PutPredmetiBody"
      responses:
        "200":
          description: Predmet updated.
          schema:
            $ref: "#/definitions/PredmetiResponse"

    delete:
      security:
        - Bearer: []
      tags:
        - Predmet
      summary: Delete predmet.
      description: "Requires logged in user to be super_user."
      operationId: deleteUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the predmet that needs to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Predmet deleted.
          schema:
            $ref: "#/definitions/PredmetiResponse"
################################################################################
#                                 Definitions                                  #
################################################################################

definitions:
  #################################################
  #models
  User:
    type: object
    required:
      - id
      - username
      - ime
      - poslovnica
      - email
      - rola
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      username:
        type: string
      ime:
        type: string
      poslovnica:
        type: string
      email:
        type: string
      rola:
        type: string
        enum: ['korisnik', 'menadzer', 'super_user']
      createdAt:
        type: string
      updatedAt:
        type: string

  Poslovnica:
    type: object
    required:
      - id
      - naziv
      - opstina
      - adresa
      - pib
      - matBr
      - ziro
      - telefon
      - isActive
      - email
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      opstina:
        type: integer
      adresa:
        type: string
      pib:
        type: string
      matBr:
        type: string
      ziro:
        type: string
      telefon:
        type: string
      isActive:
        type: boolean
      email:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Opstina:
    type: object
    required:
      - id
      - naziv
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Usluga:
    type: object
    required:
      - id
      - naziv
      - poslovnica
      - opis
      - cena
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      poslovnica:
        type: string
      opis:
        type: string
      cena:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Osiguranje:
    type: object
    required:
      - id
      - naziv
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      telefon:
        type: string
      email:
        type: string
      stavkeOsiguranja:
        type: array
        items:
          type: integer
      poslovnice:
        type: array
        items:
          type: integer
      createdAt:
        type: string
      updatedAt:
        type: string

  Taksa:
    type: object
    required:
      - id
      - naziv
      - usluga
      - opstina
      - vrstaVozila
      - godisteOd
      - godisteDo
      - zapreminaOd
      - zapreminaDo
      - snagaOd
      - snagaDo
      - brSedistaOd
      - brSedistaDo
      - nosivostOd
      - nosivostDo
      - cena
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      nazivTakse:
        type: integer
      usluga:
        type: string
      opstina:
        type: integer
      vrstaVozila:
        type: string
      godisteOd:
        type: integer
      godisteDo:
        type: integer
      zapreminaOd:
        type: integer
      zapreminaDo:
        type: integer
      snagaOd:
        type: integer
      snagaDo:
        type: integer
      brSedistaOd:
        type: integer
      brSedistaDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      cena:
        type: integer
      izuzetak:
        type: string
      komentar:
        type: string
      isDefault:
        type: boolean
      createdAt:
        type: string
      updatedAt:
        type: string

  StavkaOsiguranja:
    type: object
    required:
      - id
      - osiguranje
      - vrstaVozila
      - kwOd
      - kwDo
      - nosivostOd
      - nosivostDo
      - ccmOd
      - ccmDo
      - brMestaOd
      - brMestaDo
      - cena
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
      osiguranje:
        type: integer
      vrstaVozila:
        type: string
      kwOd:
        type: integer
      kwDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      ccmOd:
        type: integer
      ccmDo:
        type: integer
      brMestaOd:
        type: integer
      brMestaDo:
        type: string
      cena:
        type: string
      popust:
        type: integer
      izuzetak:
        type: string
      opis:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  NazivTakse:
    type: object
    required:
      - id
      - naziv
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
      naziv:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  Banka:
    type: object
    required:
      - id
      - naziv
      - provizija
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
      naziv:
        type: string
      provizija:
        type: number
      createdAt:
        type: string
      updatedAt:
        type: string

  Lice:
    type: object
    required:
      - id
      - tip
      - nazivFirme
      - ime
      - prezime
      - adresa
      - maticniBroj
      - licnaKarta
      - pib
      - ziroRacun
      - telFiksni
      - telMobilni
      - kontakt
      - email
      - poslovnica
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
      tip:
        type: string
      nazivFirme:
        type: string
      ime:
        type: string
      prezime:
        type: string
      adresa:
        type: string
      maticniBroj:
        type: string
      licnaKarta:
        type: string
      pib:
        type: string
      ziroRacun:
        type: string
      telFiksni:
        type: string
      telMobilni:
        type: string
      kontakt:
        type: string
      email:
        type: string
      poslovnica:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string

  Vozilo:
    type: object
    required:
      - id
      - vrstaVozila
      - registarskiBr
      - brMotora
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
      vrstaVozila:
        type: string
      registarskiBr:
        type: string
      marka:
        type: string
      tip:
        type: string
      model:
        type: string
      godiste:
        type: integer
      snagaKw:
        type: integer
      zapremina:
        type: integer
      nosivost:
        type: integer
      masa:
        type: integer
      maxMasa:
        type: integer
      gorivo:
        type: string
      boja:
        type: string
      bojaSasija:
        type: string
      brMotora:
        type: string
      brOsovina:
        type: string
      homoOznaka:
        type: string
      prvaReg:
        type: string
      mestaSedenje:
        type: integer
      mestaStajanje:
        type: integer
      istekReg:
        type: string
      sestomesecni:
        type: string
      poslovnica:
        type: integer
      createdAt:
        type: string
      updatedAt:
        type: string

  TipPredmeta:
    type: object
    required:
      - id
      - naziv
      - createdAt
      - updatedAt
    properties:
      id:
        type: integer
      naziv:
        type: string
      poslovnica:
        type: integer
      usluge:
        type: array
        items:
          type: integer
      takse:
        type: array
        items:
          type: integer
      createdAt:
        type: string
      updatedAt:
        type: string

  Predmet:
    type: object
    required:
      - id
      - name
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
      name:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
  #################################################################
  #################################################################
  #params

  ######################
  #Users
  UsersSignUpBody:
    type: object
    required:
      - username
      - ime
      - poslovnica
      - password
      - email
    properties:
      username:
        type: string
      ime:
        type: string
      poslovnica:
        type: integer
      password:
        type: string
      email:
        type: string

  PutUsersBody:
    type: object
    properties:
      username:
        type: string
      ime:
        type: string
      password:
        type: string
      email:
        type: string

  UsersSignInBody:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string

  ###############
  #Poslovnica
  PutPoslovniceBody:
    type: object
    properties:
      naziv:
        type: string
      adresa:
        type: string
      pib:
        type: string
      matBr:
        type: string
      ziro:
        type: string
      telefon:
        type: string
      email:
        type: string
      isActive:
        type: boolean
      osiguranja:
        type: array
        items:
          type: integer

  PostPoslovniceBody:
    type: object
    required:
      - naziv
      - opstina
      - adresa
      - pib
      - matBr
      - ziro
      - telefon
      - email
    properties:
      naziv:
        type: string
      opstina:
        type: integer
      adresa:
        type: string
      pib:
        type: string
      matBr:
        type: string
      ziro:
        type: string
      telefon:
        type: string
      email:
        type: string
      isActive:
        type: boolean

  ###############
  #Opstina
  PutOpstineBody:
    type: object
    properties:
      naziv:
        type: string

  PostOpstineBody:
    type: object
    required:
      - naziv
    properties:
      naziv:
        type: string

  ###############
  #Usluga
  PostUslugeBody:
    type: object
    required:
      - naziv
      - opis
      - cena
    properties:
      naziv:
        type: string
      opis:
        type: string
      cena:
        type: string

  PutUslugeBody:
    type: object
    required:
      - naziv
      - opis
      - cena
    properties:
      naziv:
        type: string
      opis:
        type: string
      cena:
        type: string
  ###############
  #Osiguranje
  PostOsiguranjeBody:
    type: object
    required:
      - naziv
    properties:
      naziv:
        type: string
      telefon:
        type: string
      email:
        type: string
      stavkeOsiguranja:
        type: array
        items:
          type: integer
      poslovnice:
        type: array
        items:
          type: integer

  PutOsiguranjeBody:
    type: object
    properties:
      naziv:
        type: string
      telefon:
        type: string
      email:
        type: string
      stavkeOsiguranja:
        type: array
        items:
          type: integer
      poslovnice:
        type: array
        items:
          type: integer

  ###############
  #Taksa
  PostTakseBody:
    type: object
    required:
      - nazivTakse
      - opstina
      - vrstaVozila
      - godisteOd
      - godisteDo
      - zapreminaOd
      - zapreminaDo
      - snagaOd
      - snagaDo
      - brSedistaOd
      - brSedistaDo
      - nosivostOd
      - nosivostDo
      - cena
    properties:
      nazivTakse:
        type: integer
      opstina:
        type: integer
      vrstaVozila:
        type: string
      godisteOd:
        type: integer
      godisteDo:
        type: integer
      zapreminaOd:
        type: integer
      zapreminaDo:
        type: integer
      snagaOd:
        type: integer
      snagaDo:
        type: integer
      brSedistaOd:
        type: integer
      brSedistaDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      cena:
        type: integer
      izuzetak:
        type: string
      komentar:
        type: string
      isDefault:
        type: boolean

  PutTakseBody:
    type: object
    properties:
      nazivTakse:
        type: integer
      opstina:
        type: integer
      vrstaVozila:
        type: string
      godisteOd:
        type: integer
      godisteDo:
        type: integer
      zapreminaOd:
        type: integer
      zapreminaDo:
        type: integer
      snagaOd:
        type: integer
      snagaDo:
        type: integer
      brSedistaOd:
        type: integer
      brSedistaDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      cena:
        type: integer
      izuzetak:
        type: string
      komentar:
        type: string
      isDefault:
        type: boolean
  ###############
  #StavkaOsiguranja
  PostStavkeOsiguranjaBody:
    type: object
    required:
      - osiguranje
      - vrstaVozila
      - kwOd
      - kwDo
      - nosivostOd
      - nosivostDo
      - ccmOd
      - ccmDo
      - brMestaOd
      - brMestaDo
      - cena
    properties:
      osiguranje:
        type: integer
      vrstaVozila:
        type: string
      kwOd:
        type: integer
      kwDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      ccmOd:
        type: integer
      ccmDo:
        type: integer
      brMestaOd:
        type: integer
      brMestaDo:
        type: string
      cena:
        type: string
      popust:
        type: integer
      izuzetak:
        type: string
      opis:
        type: string

  PutStavkeOsiguranjaBody:
    type: object
    properties:
      osiguranje:
        type: integer
      vrstaVozila:
        type: string
      kwOd:
        type: integer
      kwDo:
        type: integer
      nosivostOd:
        type: integer
      nosivostDo:
        type: integer
      ccmOd:
        type: integer
      ccmDo:
        type: integer
      brMestaOd:
        type: integer
      brMestaDo:
        type: string
      cena:
        type: string
      popust:
        type: integer
      izuzetak:
        type: string
      opis:
        type: string
  ###############
  #NazivTakse
  PostNaziviTaksaBody:
    type: object
    required:
      - naziv
    properties:
      naziv:
        type: string

  PutNaziviTaksaBody:
    type: object
    properties:
      naziv:
        type: string

  ###############
  #Banka
  PostBankeBody:
    type: object
    required:
      - naziv
      - provizija
    properties:
      naziv:
        type: string
      provizija:
        type: number

  PutBankeBody:
    type: object
    properties:
      naziv:
        type: string
      provizija:
        type: number

  ###############
  #Lice
  PostLicaBody:
    type: object
    required:
      - id
      - tip
      - nazivFirme
      - ime
      - prezime
      - adresa
      - maticniBroj
      - licnaKarta
      - pib
      - ziroRacun
      - telFiksni
      - telMobilni
      - kontakt
      - email
      - createdAt
      - updatedAt
    properties:
      id:
        type: string
      tip:
        type: string
      nazivFirme:
        type: string
      ime:
        type: string
      prezime:
        type: string
      adresa:
        type: string
      maticniBroj:
        type: string
      licnaKarta:
        type: string
      pib:
        type: string
      ziroRacun:
        type: string
      telFiksni:
        type: string
      telMobilni:
        type: string
      kontakt:
        type: string
      email:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string

  PutLicaBody:
    type: object
    properties:
      tip:
        type: string
      nazivFirme:
        type: string
      ime:
        type: string
      prezime:
        type: string
      adresa:
        type: string
      maticniBroj:
        type: string
      licnaKarta:
        type: string
      pib:
        type: string
      ziroRacun:
        type: string
      telFiksni:
        type: string
      telMobilni:
        type: string
      kontakt:
        type: string
      email:
        type: string

  ###############
  #Vozilo
  PostVozilaBody:
    type: object
    required:
      - vrstaVozila
      - registarskiBr
      - brMotora
      - lice
      - createdAt
      - updatedAt
    properties:
      vrstaVozila:
        type: string
      lice:
        type: integer
      registarskiBr:
        type: string
      marka:
        type: string
      tip:
        type: string
      model:
        type: string
      godiste:
        type: integer
      snagaKw:
        type: integer
      zapremina:
        type: integer
      nosivost:
        type: integer
      masa:
        type: integer
      maxMasa:
        type: integer
      gorivo:
        type: string
      boja:
        type: string
      bojaSasija:
        type: string
      brMotora:
        type: string
      brOsovina:
        type: string
      homoOznaka:
        type: string
      prvaReg:
        type: string
      mestaSedenje:
        type: integer
      mestaStajanje:
        type: integer
      istekReg:
        type: string
      sestomesecni:
        type: string

  PutVozilaBody:
    type: object
    properties:
            vrstaVozila:
              type: string
            registarskiBr:
              type: string
            lice:
              type: integer
            marka:
              type: string
            tip:
              type: string
            model:
              type: string
            godiste:
              type: integer
            snagaKw:
              type: integer
            zapremina:
              type: integer
            nosivost:
              type: integer
            masa:
              type: integer
            maxMasa:
              type: integer
            gorivo:
              type: string
            boja:
              type: string
            bojaSasija:
              type: string
            brMotora:
              type: string
            brOsovina:
              type: string
            homoOznaka:
              type: string
            prvaReg:
              type: string
            mestaSedenje:
              type: integer
            mestaStajanje:
              type: integer
            istekReg:
              type: string
            sestomesecni:
              type: string

  ###############
  #TipPredmeta
  PostTipoviPredmetaBody:
    type: object
    required:
      - naziv
      - usluge
    properties:
      naziv:
        type: string
      usluge:
        type: array
        items:
          type: integer

  PutTipoviPredmetaBody:
    type: object
    properties:
      naziv:
        type: string
      usluge:
        type: array
        items:
          type: integer

  ###############
  #Predmet
  PostPredmetiBody:
    type: object
    required:
      - name
    properties:
      cena:
        type: number
      placeno:
        type: number
      provizija:
        type: number
      tipPredmeta:
        type: integer
      takse:
        type: array
        items:
          type: integer

  PutPredmetiBody:
    type: object
    properties:
      cena:
        type: number
      placeno:
        type: number
      provizija:
        type: number
      tipPredmeta:
        type: integer
      takse:
        type: array
        items:
          type: integer

  ###############################################################
  ###############################################################
  #responses

  ######################
  #Users
  UsersSignUpResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        properties:
          token:
            type: string
            description: "JWT"
          user:
            $ref: "#/definitions/User"
  UsersResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - users
        properties:
          users:
            type: 'array'
            items:
              $ref: "#/definitions/User"

  DeleteUsersResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - user
        properties:
          user:
            $ref: "#/definitions/User"

###################
#Poslovnica
  PoslovnicaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - poslovnice
        properties:
          poslovnica:
            type: 'array'
            items:
              $ref: "#/definitions/Poslovnica"

  DeletePoslovniceResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - poslovnica
        properties:
          poslovnica:
            $ref: "#/definitions/Poslovnica"

###################
#Opstina
  OpstinaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - opstine
        properties:
          opstina:
            type: 'array'
            items:
              $ref: "#/definitions/Opstina"

  OpstineResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - opstina
        properties:
          opstina:
            $ref: "#/definitions/Opstina"

###################
#Usluga
  UslugaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - usluge
        properties:
          usluga:
            type: 'array'
            items:
              $ref: "#/definitions/Usluga"

  UslugeResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - usluga
        properties:
          usluga:
            $ref: "#/definitions/Usluga"
###################
#Osiguranje
  OsiguranjaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - osiguranje
        properties:
          osiguranje:
            type: 'array'
            items:
              $ref: "#/definitions/Osiguranje"

  OsiguranjeResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - osiguranje
        properties:
          osiguranje:
            $ref: "#/definitions/Osiguranje"

  ###################
  #Taksa
  TaksaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - takse
        properties:
          taksa:
            type: 'array'
            items:
              $ref: "#/definitions/Taksa"

  TakseResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - taksa
        properties:
          taksa:
            $ref: "#/definitions/Taksa"

###################
#StavkaOsiguranja
  StavkaOsiguranjaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - stavkaOsiguranja
        properties:
          stavkaOsiguranja:
            type: 'array'
            items:
              $ref: "#/definitions/StavkaOsiguranja"

  StavkeOsiguranjaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - stavkaOsiguranja
        properties:
          stavkaOsiguranja:
            $ref: "#/definitions/StavkaOsiguranja"

###################
#NazivTakse
  NazivTakseResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - naziviTaksa
        properties:
          naziviTaksa:
            type: 'array'
            items:
              $ref: "#/definitions/NazivTakse"

  NaziviTaksaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - nazivTakse
        properties:
          nazivTakse:
            $ref: "#/definitions/NazivTakse"
###################
#Banka
  BankaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - banke
        properties:
          banke:
            type: 'array'
            items:
              $ref: "#/definitions/Banka"

  BankeResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - banka
        properties:
          banka:
            $ref: "#/definitions/Banka"

###################
#Lice
  LiceResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - lica
        properties:
          lica:
            type: 'array'
            items:
              $ref: "#/definitions/Lice"

  LicaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - lice
        properties:
          lice:
            $ref: "#/definitions/Lice"

###################
#Vozilo
  VoziloResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - vozila
        properties:
          vozila:
            type: 'array'
            items:
              $ref: "#/definitions/Vozilo"

  VozilaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - vozilo
        properties:
          vozilo:
            $ref: "#/definitions/Vozilo"

###################
#TipPredmeta
  TipPredmetaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - tipoviPredmeta
        properties:
          tipoviPredmeta:
            type: 'array'
            items:
              $ref: "#/definitions/TipPredmeta"

  TipoviPredmetaResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - tipPredmeta
        properties:
          tipPredmeta:
            $ref: "#/definitions/TipPredmeta"

###################
#Predmet
  PredmetResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - predmeti
        properties:
          predmeti:
            type: 'array'
            items:
              $ref: "#/definitions/Predmet"

  PredmetiResponse:
    type: object
    required:
      - status
      - data
    properties:
      status:
        type: string
        enum: ['success']
      data:
        type: object
        required:
          - predmet
        properties:
          predmet:
            $ref: "#/definitions/Predmet"
